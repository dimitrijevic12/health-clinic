<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="birajTIPsale" xml:space="preserve">
    <value>Choose type for new room:</value>
  </data>
  <data name="DatumRodjenja" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="dodajNovogLekara" xml:space="preserve">
    <value>Add new doctor</value>
  </data>
  <data name="dodajNovuSalu" xml:space="preserve">
    <value>Add new room</value>
  </data>
  <data name="drugiDatum" xml:space="preserve">
    <value>Select the date to which you want to see the plan:</value>
  </data>
  <data name="DugmeIzadji" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="DugmeOtkazi" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DugmePotvrdi" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="en" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="home" xml:space="preserve">
    <value>HOME PAGE </value>
  </data>
  <data name="IdLekar" xml:space="preserve">
    <value>Doctors ID</value>
  </data>
  <data name="Ime" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="imeDruge" xml:space="preserve">
    <value>Choose name for second room:</value>
  </data>
  <data name="imePrve" xml:space="preserve">
    <value>Choose name for first room:</value>
  </data>
  <data name="izaberiDatum" xml:space="preserve">
    <value>Choose date for renovation:</value>
  </data>
  <data name="izaberiDatumKrajnji" xml:space="preserve">
    <value>Select the date when the renovation ends:</value>
  </data>
  <data name="izaberiDatumPocetni" xml:space="preserve">
    <value>Select the date when the renovation starts:</value>
  </data>
  <data name="izaberiLekara" xml:space="preserve">
    <value>Choose doctor:</value>
  </data>
  <data name="izaberiNazivSale" xml:space="preserve">
    <value>Choose room:</value>
  </data>
  <data name="izaberiNoviTipSale" xml:space="preserve">
    <value>Choose new type:</value>
  </data>
  <data name="izaberiOpremu" xml:space="preserve">
    <value>Choose equipment:</value>
  </data>
  <data name="izaberiOpremuDetaljno" xml:space="preserve">
    <value>Choose equipment for detailed view:</value>
  </data>
  <data name="izaberisaludva" xml:space="preserve">
    <value>Choose second room for merging:</value>
  </data>
  <data name="izaberisalujedan" xml:space="preserve">
    <value>Choose  first room for merging:</value>
  </data>
  <data name="izaberiSaluUKojuPrebacujes" xml:space="preserve">
    <value>Select room where you want to transfer the equipment:</value>
  </data>
  <data name="izaberiSaluZaKojuMenjasTip" xml:space="preserve">
    <value>Choose room for renovation:</value>
  </data>
  <data name="izaberiSaluZaOpremu" xml:space="preserve">
    <value>Select room for which you want to see the equipment:</value>
  </data>
  <data name="izaberiSaluZaPodelu" xml:space="preserve">
    <value>Choose room you want to split:</value>
  </data>
  <data name="izaberiSaluZaPremestanjeOpreme" xml:space="preserve">
    <value>Select room from which you want to transfer equipment:</value>
  </data>
  <data name="izDrugeUOvu" xml:space="preserve">
    <value>From other room to this</value>
  </data>
  <data name="izOveUDrugu" xml:space="preserve">
    <value>From this room to other</value>
  </data>
  <data name="izvestaj" xml:space="preserve">
    <value>REPORT</value>
  </data>
  <data name="Jmbg" xml:space="preserve">
    <value>Personal ID</value>
  </data>
  <data name="korisnickoIme" xml:space="preserve">
    <value>Username:</value>
  </data>
  <data name="krecenje" xml:space="preserve">
    <value>Painting</value>
  </data>
  <data name="lekar" xml:space="preserve">
    <value>DOCTOR</value>
  </data>
  <data name="lekari" xml:space="preserve">
    <value>Doctors:</value>
  </data>
  <data name="lekovi" xml:space="preserve">
    <value>Drugs:</value>
  </data>
  <data name="listadostupneopreme" xml:space="preserve">
    <value>Equipment in warehouse</value>
  </data>
  <data name="listadostupnihlekova" xml:space="preserve">
    <value>Drugs in warehouse</value>
  </data>
  <data name="magacin" xml:space="preserve">
    <value>WAREHOUSE</value>
  </data>
  <data name="narucilekove" xml:space="preserve">
    <value>Order drugs</value>
  </data>
  <data name="naruciopremu" xml:space="preserve">
    <value>Order equipment</value>
  </data>
  <data name="NovaSalaInfo" xml:space="preserve">
    <value>Enter informations about the new room:</value>
  </data>
  <data name="odabranaOprema" xml:space="preserve">
    <value>Chosen equipment:</value>
  </data>
  <data name="odjava" xml:space="preserve">
    <value>LOG OUT</value>
  </data>
  <data name="opcije" xml:space="preserve">
    <value>OPTIONS</value>
  </data>
  <data name="oprema" xml:space="preserve">
    <value>Equipment:</value>
  </data>
  <data name="opremaUOdabranojsali" xml:space="preserve">
    <value>Equipment in this room:</value>
  </data>
  <data name="planlekar" xml:space="preserve">
    <value>Plan for doctor</value>
  </data>
  <data name="podelaSala" xml:space="preserve">
    <value>Split room</value>
  </data>
  <data name="pogledajPlan" xml:space="preserve">
    <value>See plan</value>
  </data>
  <data name="Pol" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="pomoc" xml:space="preserve">
    <value>  HELP</value>
  </data>
  <data name="PorukaNaruciLek" xml:space="preserve">
    <value>If you are ordering this drug for the first time, new ID will be assigned to that drug</value>
  </data>
  <data name="PorukaNaruciOpremu" xml:space="preserve">
    <value>If you are ordering this equipment for the first time, new ID will be assigned to that equipment</value>
  </data>
  <data name="PorukaPodela" xml:space="preserve">
    <value>When dividing both of these halls, they retain the type of the original hall, each hall received half of the equipment.</value>
  </data>
  <data name="porukaSpajanje" xml:space="preserve">
    <value>When merging, the type and name of the new room will be the same as the type and name of the first selected room.</value>
  </data>
  <data name="premestiOpremu" xml:space="preserve">
    <value>Move equipment</value>
  </data>
  <data name="premstanjeOpreme" xml:space="preserve">
    <value>Moving equipment:</value>
  </data>
  <data name="Prezime" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="prikazdogadjaja" xml:space="preserve">
    <value>All appointments</value>
  </data>
  <data name="prikazOpreme" xml:space="preserve">
    <value>Show equipment</value>
  </data>
  <data name="prikazPlana" xml:space="preserve">
    <value>Plan:</value>
  </data>
  <data name="promenajezika" xml:space="preserve">
    <value>CHANGE LANGUAGE</value>
  </data>
  <data name="promenateme" xml:space="preserve">
    <value>CHANGE THEME</value>
  </data>
  <data name="promenaTipa" xml:space="preserve">
    <value>Change type for room</value>
  </data>
  <data name="prviDatum" xml:space="preserve">
    <value>Select the date from which you want to see the plan:</value>
  </data>
  <data name="RadnoVreme" xml:space="preserve">
    <value>Working schedule</value>
  </data>
  <data name="renoviranje" xml:space="preserve">
    <value>RENOVATION</value>
  </data>
  <data name="sala" xml:space="preserve">
    <value>ROOM</value>
  </data>
  <data name="sifra" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="spajanjeSala" xml:space="preserve">
    <value>Merge rooms</value>
  </data>
  <data name="Specijalista" xml:space="preserve">
    <value>Specialist</value>
  </data>
  <data name="sr" xml:space="preserve">
    <value>Serbian</value>
  </data>
  <data name="unesiIdNoveSale" xml:space="preserve">
    <value>Enter id for new room:</value>
  </data>
  <data name="unesiKolicinu" xml:space="preserve">
    <value>Enter quantity:</value>
  </data>
  <data name="unesiLekNarucivanje" xml:space="preserve">
    <value>Enter drug you want to order:</value>
  </data>
  <data name="unesiOpremuNarucivanje" xml:space="preserve">
    <value>Enter equimpent you want to order:</value>
  </data>
  <data name="Upravnik" xml:space="preserve">
    <value>MANAGER</value>
  </data>
</root>